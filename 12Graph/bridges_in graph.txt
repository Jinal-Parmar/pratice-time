import java.util.*;
import java.lang.*;
import java.io.*;

public class Main
{
    static int tin[] = new int[1000005], low[]= new int[1000005], vis[]= new int[1000005];
    static int timer=0; 
    public static void dfs(int n, int par, ArrayList<ArrayList<Integer>> adj, PrintWriter out)
    {
        tin[n]=low[n]=timer++;
        vis[n]=1;
        for(int x: adj.get(n))
        {
            if(x==par) continue;
            if(vis[x]!=1)
            {
                dfs(x,n,adj,out);
                low[n]=Math.min(low[n],low[x]);
                if(low[x]> tin[n])  out.println(x+"->"+n); // bridge
            }
            else  low[n]=Math.min(low[n],low[x]);
        }
      
    }
	public static void main (String[] args) throws java.lang.Exception
	{ 
	 PrintWriter out=new PrintWriter(System.out);
	 BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
     StringTokenizer st = new StringTokenizer(br.readLine()," ");
     int n=Integer.parseInt(st.nextToken()), m=Integer.parseInt(st.nextToken());
     
     ArrayList<ArrayList<Integer>> adj= new ArrayList<>();
     for(int i=0;i<=n;i++)   adj.add(new ArrayList<Integer>());
    
     for(int i=0;i<m;i++)
        {
           st = new StringTokenizer(br.readLine()," ");
           int u=Integer.parseInt(st.nextToken()), v=Integer.parseInt(st.nextToken());
            adj.get(u).add(v);
            adj.get(v).add(u);
        }
     dfs(1,1,adj,out);
     out.close();
	}
}

// 11 13
// 1 2
// 2 3
// 3 4
// 4 1
// 4 5
// 5 6
// 6 7
// 7 8
// 8 5
// 7 9
// 9 10
// 10 11
// 11 9

// 9->7
// 5->4
