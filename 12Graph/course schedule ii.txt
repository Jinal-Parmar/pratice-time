class Solution {
    public int[] findOrder(int numCourses, int[][] prerequisites) {  
        // b->a   {a,b}
        int []ans= new int [numCourses]; 
        ArrayList<ArrayList<Integer>> adj= new ArrayList<>();
        int [] indeg= new int[numCourses];
        
        for(int i=0;i<numCourses;i++)   adj.add(new ArrayList<>());
        for(int x[]: prerequisites)
        {
            adj.get(x[1]).add(x[0]);
            indeg[x[0]]++;
        }   
        Queue<Integer> q= new LinkedList<>();
        for(int i=0;i<numCourses;i++)
            if(indeg[i]==0) q.add(i);
        
        int c=0,j=0;
        while(!q.isEmpty())
        {
            int n=q.poll(); 
            ans[j++]=n; 
            c++;
            for(int x: adj.get(n))
            {
                indeg[x]--;
                if(indeg[x]==0) q.add(x);
            }
        }
        return (c== numCourses)? ans:new int[] {};
        // for(int i=0;i<numCourses;i++)  //cycle hui to e.g.(0,1) (1,0)
        //  {
        //     if(indeg[i]!=0)   return new int[] {};
        //  } 
        // return ans;
    }
}