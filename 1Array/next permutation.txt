class Solution {
    public void swap(int [] nums, int i ,int j)
    {
        int t= nums[i]; nums[i]= nums[j]; nums[j]=t;
    }
    public void nextPermutation(int[] nums) {
        
        if(nums==null || nums.length==1) return;
        
        int i=nums.length-2, j=nums.length-1;
        
        while(i>=0 && nums[i]>=nums[i+1]) i--;  // find i which should be replaced(break point)

        if(i>=0)				// if i mila				
        {   
            while(j>=0 && nums[j]<=nums[i]) j--; // find j (so nums[j] is next greater than nums[i])
            swap(nums, i,j);
        }
        
        i++; j=nums.length-1;
        while(i< j)  swap(nums,i++,j--);   // reverse (i+1 to last)
    }
}