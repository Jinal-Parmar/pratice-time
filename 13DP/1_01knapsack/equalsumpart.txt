static int equalPartition(int N, int arr[])
    {
        // sum of both part will be even
        int s=0;
        for(int i=0;i<N;i++) s+=arr[i];
        if(s%2!=0) return 0;
        else // now as sum is even so need to find subset with sum half of s.... problem is reduced to subset sum
        {
       		 s/=2;    
       		 boolean t[][]=new boolean [N+1][s+1];
                 for(int i=0;i<N+1;i++){
            		for(int j=0;j<s+1;j++){
              			if(i==0 && j==0) t[i][j]=true;
              			else if(i==0) t[i][j]=false;
              			else if(j==0) t[i][j]=true;
              			else if(arr[i-1]<=j)  t[i][j]=t[i-1][j-arr[i-1]]||t[i-1][j];
              			else  t[i][j]=t[i-1][j];  
            }
        }
        if(t[N][s]) return 1;   else return 0;
        }
    }