   
   static int recusrivelcs(int x, int y, String s1, String s2)
    {
        if(x==0 || y==0) return 0;
        if(s1.charAt(x-1)==s2.charAt(y-1)) return 1+recusrivelcs(x-1,y-1,s1,s2);
        else return Math.max(recusrivelcs(x-1,y,s1,s2),recusrivelcs(x,y-1,s1,s2));
    }
   static int lcs(int x, int y, String s1, String s2,int t[][])
    {
        if(x==0 || y==0) return 0;
        if(t[x-1][y-1]!=-1) return t[x-1][y-1];
        if(s1.charAt(x-1)==s2.charAt(y-1)) return t[x-1][y-1]=1+lcs(x-1,y-1,s1,s2,t);
        else return t[x-1][y-1]=Math.max(lcs(x-1,y,s1,s2,t),lcs(x,y-1,s1,s2,t));
    }
   static int lcs(int x, int y, String s1, String s2)
    {
         int t[][]=new int[x+1][y+1];
         for (int[] row : t) Arrays.fill(row, -1);
         return lcs(x,y,s1,s2,t);
    }
   static int dplcs(int x, int y, String s1, String s2)
    {
        //if(x==0 || y==0) return 0;
        int t[][]=new int[x+1][y+1];
        for(int i=0;i<x+1;i++)
        {
            for(int j=0;j<y+1;j++)
            {
                if(i==0||j==0) t[i][j]=0;
                else if(s1.charAt(i-1)==s2.charAt(j-1)) t[i][j]= 1+t[i-1][j-1];
                else  t[i][j]=Math.max(t[i-1][j],t[i][j-1]);
            } 
        }
        return t[x][y];//length not index 
    }
    public static void main (String[] args)
    {	System.out.println(recusrivelcs(6,6,"ABCDGH","AEDFHR"));  }