//Fractinonal KS


class Item {
    int value, weight;
    Item(int x, int y){
        this.value = x;
        this.weight = y;
    }
}

class itemcompare implements Comparator<Item>
{
    public int compare(Item i1,Item  i2)
    {
        double a1=(double) (i1.value)/(double) (i1.weight);
        double a2=(double) (i2.value)/(double) (i2.weight);
        if(a1<a2) return 1;
        else if(a1>a2) return -1;
        else return 0;
    }
}

class Solution
{
    double fractionalKnapsack(int W, Item arr[], int n) 
    {
        //sort wrt val/wt in descending order
        Arrays.sort(arr,new itemcompare());
        int cur=0;
        double  ans=0.0;
        for(Item x: arr)
        {
         if(cur+x.weight<=W) 
         {
           cur+=x.weight; ans+=x.value;   
         }
         else
         {
             int left=W-cur;
             ans+= ((double) (x.value)/(double) (x.weight))*(double)left;
             break;
         }
        }
        return ans;
    }
}

