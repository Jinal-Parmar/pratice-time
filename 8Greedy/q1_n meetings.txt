/*package whatever //do not write package name here */

import java.io.*;
import java.util.*;

class meeting{
    int start,end,pos; 
    meeting(int s,int e,int p){start=s; end=e; pos=p;}
}
class meetcomp implements Comparator<meeting>
{
        public int compare(meeting m1,meeting m2)
        {
            if(m1.end<m2.end) return -1;
            else if(m1.end>m2.end) return 1;
            else if(m1.pos<m2.pos) return -1;
            return 1;
        }
}
    
class mainmeet{
    
    static void maxmeet(int s[],int e[])
    {
        ArrayList<meeting> m=new ArrayList<>();
        ArrayList<Integer> a=new ArrayList<>();
        for(int i=0;i<s.length;i++)
        m.add(new meeting(s[i],e[i],i+1));
        
        meetcomp mc=new meetcomp();
        Collections.sort(m,mc);
        
        
        int l=0;
        
        for(int i=0;i<s.length;i++){
            if(m.get(i).start>l)
            {
                l=m.get(i).end;
                a.add(m.get(i).pos);
            }
        }
     
    for(int i=0;i<a.size();i++)
    {System.out.print(a.get(i)+" "); }
        
    }
    
    public static void main(String[] args)
    {

    int s[] = { 1, 3, 0, 5, 8, 5 };
    int f[] = { 2, 4, 6, 7, 9, 9 }; 

    maxmeet(s,f);
    }
    
    
}

//sort according to finishing time
// if same finish-start diff then choose meeting no.
// o(n)+o(nlogn)+o(n)
//  add in ds/sort/traverse to find max meetings