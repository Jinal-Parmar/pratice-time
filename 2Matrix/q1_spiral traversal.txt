import java.io.*;
import java.lang.*;
import java.util.*;
class GFG {
    
    public static List<Integer> fun(int a[][])
    {
        List<Integer> x=new ArrayList<Integer>();
        if(a.length==0) return x;
        int rs=0,re=a.length-1,cs=0,ce=a[0].length-1;
        while(rs<=re && cs<=ce)
        {
           for(int i=cs;i<=ce;i++) x.add(a[rs][i]); 
           rs++;// coz 1st row ka last element ho gyi hi
           for(int i=rs;i<=re;i++) x.add(a[i][ce]); 
           ce--;
           if(rs<=re)// vrna extra print ho jaega
           for(int i=ce;i>=cs;i--) x.add(a[re][i]); 
           re--;
           if(cs<=ce)
           for(int i=re;i>=rs;i--) x.add(a[i][cs]); 
           cs++;
        }
        return x;
    }
    public static List<Integer> fun2(List<Integer> x,int a[][],int rs,int cs,int re,int ce)
    {
        
        if(re==0) return x;
       
        if(rs<=re && cs<=ce)
        {
           for(int i=cs;i<=ce;i++) x.add(a[rs][i]); 
           rs++;// coz 1st row ka last element ho gyi hi
           for(int i=rs;i<=re;i++) x.add(a[i][ce]); 
           ce--;
           if(rs<=re)// vrna extra print ho jaega
           for(int i=ce;i>=cs;i--) x.add(a[re][i]); 
           re--;
           if(cs<=ce)
           for(int i=re;i>=rs;i--) x.add(a[i][cs]); 
           cs++;
           
           fun2(x,a,rs,cs,re,ce);
        }
        
        return x;
    }
    
	public static void main (String[] args) {
	    int a[][] = { { 1, 2, 3, 4, 5, 6 },
                      { 7, 8, 9, 10, 11, 12 },
                      { 13, 14, 15, 16, 17, 18 } };
 
        List<Integer> x=new ArrayList<Integer>();
        //System.out.println(fun(a));
        System.out.println(fun2(x,a,0,0,a.length-1,a[0].length-1));
	}

    
    //1. using 4 pointers - o(mxn)
    //2. recursive - o(mxn)
    
}