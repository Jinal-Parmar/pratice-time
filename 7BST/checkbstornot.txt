public class Solution
{
    
    boolean isBST(Node root,int min,int max)
    {
        if(root==null) return true;
        if(root.data<min || root.data>max)  return false;
        return isBST(root.left,min,root.data-1) && isBST(root.right,root.data+1,max);
    }
    
    boolean isBST(Node root,Node min,Node max)
    {
        if(root==null) return true;
        if((min!=null && root.data<=min.data) ||(max!=null && root.data>=max.data))  return false;
        return isBST(root.left,min,root) && isBST(root.right,root,max);
    } 
    Node prev=null;
    boolean isBST(Node root)
    {
        //return isBST(root,Integer.MIN_VALUE,Integer.MAX_VALUE);
        //return isBST(root,null,null);
        if (root != null)
        {
            if (!isBST(root.left))   return false;
            // allows only distinct values node
            if (prev != null && root.data <= prev.data )   return false;
            prev = root;
            return isBST(root.right);
        }
        return true;
    }
}