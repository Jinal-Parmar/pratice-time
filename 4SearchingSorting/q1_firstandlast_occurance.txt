/*package whatever //do not write package name here */

import java.io.*;

class GFG {
    
    
    
    public static void findFirstAndLast1(int a[],int x)
    {
        int n=a.length,first=-1,last=-1;
        for(int i=0;i<n;i++)
        {
            if(x!=a[i]) continue;
            //if(x==a[i]) 
            {
                if(first==-1) first=i;
                last=i;
            }
        }
     System.out.println("first:"+first+"last:"+last);        
    }
    
    public static void findFirstAndLast2(int a[],int x)
    {
        int n=a.length,first=-1,last=-1;
        
        if(first==-1)
        {
            int l=0,h=n-1;
            while(l<=h)
            {
                int m=l+(h-l)/2;
                if(x<a[m]) //so x left side hai
                h=m-1;
                else if(x>a[m]) //so x right side hai
                l=m+1;
                else{first=m; h=m-1;}
            }    
        }
        if(last==-1)
        {
            int l=0,h=n-1;
            while(l<=h)
            {
                int m=l+(h-l)/2;
                if(x<a[m]) //so x left side hai
                h=m-1;
                else if(x>a[m]) //so x right side hai
                l=m+1;
                else {last=m; l=m+1;}
            }    
        }
        
        
     System.out.println("first:"+first+"last:"+last);        
    }
    
	public static void main (String[] args) {
	 int a[] = { 1, 2, 2, 2, 2, 3, 4, 7, 8, 8 };
        int x = 8;
        findFirstAndLast2(a, x);
	}
	
	// 1.loop through o(n)
	// 2.binary search o(log n) + recursive
	// 3.arraylist inbuilt function  indexOf and lastIndexOf
	 
}