public int[] maxSlidingWindow(int[] nums, int k) {

//brute force O(nk)
        int [] ans=new int [nums.length-k+1];
        for(int i=0;i<=nums.length-k;i++)
        {
            int max=nums[i];
            for(int j=i;j<i+k;j++)
              max=Math.max(max,nums[j]);  
            ans[i]=max;
        }
        return ans;
    }

public int[] maxSlidingWindow(int[] nums, int k) {
        int [] ans=new int [nums.length-k+1];
        //next greater  element
        // decereasing fashion me store krna hai
        // DEque
            
        // T- O(N)+o(N) S-o(k)
        // a[i]
        // remove from deque when 
        // out of bound OR <a[i]
        int x=0;
        Deque<Integer> dq=new ArrayDeque<>();
        for(int i=0;i<nums.length;i++)
        {
            if(!dq.isEmpty() && dq.peek()==i-k)
                dq.poll(); // front se remove kiya
            
            while(!dq.isEmpty() && nums[dq.peekLast()]<nums[i]) // if bada no. aya nums me to dq ke prev chote kaam k nai
                dq.pollLast();
            
            dq.offer(i);
            if(i>=k-1) ans[x++]=nums[dq.peek()];  
        } 
        return ans;
    }